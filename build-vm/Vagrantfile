Vagrant.configure("2") do |config|
  # This Vagrantfile is auto-generated by `vagrant package` to contain
  # the MAC address of the box. Custom configuration should be placed in
  # the actual `Vagrantfile` in this box.
  config.vm.base_mac = "080027170A50"
  config.vm.box = "nritholtz/ubuntu-14.04.1"

  config.vm.provider "virtualbox" do |v|
  v.customize ["modifyvm", :id, "--usb", "off"]
  v.customize ["modifyvm", :id, "--usbehci", "off"]
    v.gui = true
  end


config.vm.provision "shell", inline: <<-SHELL
    
    #Update package repositories
    sudo apt-get update

    #Install Java JDK and JRE
    sudo apt-get -y install openjdk-7-jdk
    sudo apt-get -y install openjdk-7-jre

    #Install ant build system
    sudo apt-get -y install ant

    #install git
    sudo apt-get -y install git

    #Get desktop files - license, readme, installation, youtube video
    sudo wget -O /home/vagrant/calico_files.tar.gz https://dl.dropboxusercontent.com/u/94160299/calico_files.tar.gz?dl=1
    tar -xzvf /home/vagrant/calico_files.tar.gz -C /home/vagrant/Desktop


    #Create autostart directory to run applications on reboot
    sudo mkdir "/home/vagrant/.config/autostart"

    #Get tool code and executable
    git clone https://github.com/uci-sdcl/Calico.git

    #Create link to folder
    cd Desktop
    ln -s ../Calico .
    cd ..

    #remove unnecessary icons from home screen
    sudo rm -f /user/share/applications/firefox.desktop
    sudo rm -f /user/share/applications/.desktop

    #Move scripts to folder to automatically run tool on reboot
    sudo mv /home/vagrant/Desktop/Run_Calico_server.sh.desktop /home/vagrant/.config/autostart/Run_Calico_server.sh.desktop
    sudo mv /home/vagrant/Desktop/Run_Calico_Client.sh.desktop /home/vagrant/.config/autostart/ubuntu-software-center.sh.desktop

    sudo reboot
  SHELL

end 
# Load include vagrant file if it exists after the auto-generated
# so it can override any of the settings
include_vagrantfile = File.expand_path("../include/_Vagrantfile", __FILE__)
load include_vagrantfile if File.exist?(include_vagrantfile)
